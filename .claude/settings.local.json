{
  "permissions": {
    "allow": [
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select ttb_raw_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select ttb_extracted_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" dagster asset materialize --select ttb_cleaned_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_PARTITION_START_DATE=\"2024-01-01\" TTB_PARTITION_END_DATE=\"2024-01-03\" TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select ttb_raw_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_PARTITION_START_DATE=\"2024-01-01\" TTB_PARTITION_END_DATE=\"2024-01-03\" TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select ttb_extracted_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_PARTITION_START_DATE=\"2024-01-01\" TTB_PARTITION_END_DATE=\"2024-01-03\" TTB_DATA_TYPES=\"cola-detail,certificate\" dagster asset materialize --select ttb_cleaned_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_PARTITION_START_DATE=\"2024-01-01\" TTB_PARTITION_END_DATE=\"2024-01-03\" TTB_DATA_TYPES=\"cola-detail,certificate\" dagster asset materialize --select ttb_structured_data --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_PARTITION_START_DATE=\"2024-01-01\" TTB_PARTITION_END_DATE=\"2024-01-03\" TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select fact_certificates --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster job list -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src aws s3 rm s3://ciq-dagster/fact_certificates/2024-01-01)",
      "Bash(PYTHONPATH=src aws s3 rm s3://ciq-dagster/dim_companies/2024-01-01)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select fact_certificates --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" TTB_RECEIPT_METHODS=\"001\" dagster asset materialize --select \"+fact_certificates\" --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" dagster job execute --job ttb_analytics_pipeline --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster job execute --help)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" dagster job execute -j ttb_analytics_pipeline -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" dagster asset materialize --select \"dim_dates,ttb_reference_data,ttb_product_class_types,ttb_origin_codes\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset --help)",
      "Bash(PYTHONPATH=src TTB_DATA_TYPES=\"cola-detail,certificate\" dagster asset materialize --select \"+fact_products\" --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src python3:*)",
      "Bash(PYTHONPATH=src dagster asset materialize --select supabase_reference_data -m ciq_test_2.definitions)",
      "Bash(export:*)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"+ttb_supabase_export_complete\" --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select supabase_dim_dates -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select supabase_dim_companies --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select supabase_dim_products --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select supabase_fact_products --partition \"2024-01-01\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster job execute -j ttb_supabase_export --partition \"2024-01-03\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"+ttb_supabase_export_complete\" --partition \"2024-01-03\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select ttb_raw_data --partition \"2024-01-03|001-cola-detail\" --partition \"2024-01-03|001-certificate\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"+ttb_supabase_export_complete\" --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src aws s3 rm s3://ciq-dagster/dim_products/2024-01-01)",
      "Bash(PYTHONPATH=src aws s3 rm s3://ciq-dagster/fact_products/2024-01-01)",
      "Bash(PYTHONPATH=src dagster asset materialize --help)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:dagster.io)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"ttb_raw_data,ttb_extracted_data,ttb_cleaned_data,ttb_structured_data,dim_companies,dim_products,fact_products,supabase_dim_companies,supabase_dim_products,supabase_fact_products,ttb_supabase_export_complete\" --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Read(//private/tmp/**)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"fact_certificates,supabase_fact_certificates\" --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset list -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"fact_certificates\" --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(PYTHONPATH=src dagster asset materialize --select \"supabase_fact_certificates\" --partition \"2024-01-02\" -m ciq_test_2.definitions)",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": []
  }
}